AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM template for deploying Splunk AWS Logs Collector

Parameters:
  SplunkAPIKey:
    Type: String
  SplunkLogIngestUrl:
    Type: String
  IntegrationId:
    Type: String

Resources:
  SplunkAwsLogsCollector:
    Type: AWS::Serverless::Function
    Description: Splunk AWS Log Collector
    Properties:
      FunctionName: !Sub 'splunk-aws-logs-collector-${IntegrationId}'
      Runtime: python3.7
      Timeout: 60
      CodeUri: ./src
      Handler: function.lambda_handler
      Environment:
        Variables:
          SPLUNK_API_KEY: !Ref SplunkAPIKey
          SPLUNK_URL: !Ref SplunkLogIngestUrl
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Sid: AWSGetTagsOfResources
              Effect: Allow
              Action:
                - tag:GetResources
              Resource: '*'
      Tags:
        splunk-log-collector-id: !Sub '${IntegrationId}:${AWS::Region}'

  SplunkAwsLogsBucket:
    Type: AWS::S3::Bucket
    DependsOn: BucketPermission
    Properties:
      BucketName: !Sub 'splunk-aws-logs-${AWS::Region}'
      AccessControl: LogDeliveryWrite
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Function: !GetAtt SplunkAwsLogsCollector.Arn
            Filter:
              S3Key:
                Rules:
                  - Name: 'prefix'
                    Value: 'aws-logs'

  BucketPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref SplunkAwsLogsCollector
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub 'arn:aws:s3:::splunk-aws-logs-${AWS::Region}'

Outputs:
  LambdaArn:
    Value:
      Fn::GetAtt:
        - SplunkAwsLogsCollector
        - Arn
