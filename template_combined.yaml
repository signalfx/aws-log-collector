AWSTemplateFormatVersion: '2010-09-09'
Description: SAM template for deploying Splunk AWS Logs Collector

Parameters:
  SplunkAPIKey:
    Type: String
  SplunkLogIngestUrl:
    Type: String
  SplunkMetricIngestUrl:
    Type: String
  SplunkCloudIngestUrl:
    Type: String
  EnabledRegions:
    Type: CommaDelimitedList

Resources:
  SplunkMetricStreamsS3:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'splunk-metric-streams-s3-${AWS::AccountId}'

  SplunkMetricStreamsS3Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: splunk-metric-streams-s3
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:AbortMultipartUpload'
                  - 's3:GetBucketLocation'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:PutObject'
                Resource: !GetAtt SplunkMetricStreamsS3.Arn
      Description: 'A role that allows Kinesis Firehose to store failed requests in S3'

  SplunkAwsLogsCollectorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: splunk-log-collector
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Policies:
        - PolicyName: SplunkAwsLogsCollectorRolePolicyTag
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'tag:GetResources'
                Resource: '*'
                Sid: AWSGetTagsOfResources
        - PolicyName: SplunkAwsLogsCollectorRolePolicyS3
          PolicyDocument: 
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                Resource: '*'
                Sid: GetS3LogObjects

  SplunkAwsLogsCollectorRegionalResources:
    Type: AWS::CloudFormation::StackSet
    Properties:
      StackSetName: SplunkAwsLogsCollectorRegionalResources
      Description: Create regional resources for Splunk AWS Logs Collector
      PermissionModel: SELF_MANAGED
      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - !Ref "AWS::AccountId"
          Regions: !Ref EnabledRegions
      Parameters:
        - ParameterKey: SplunkAPIKey
          ParameterValue: !Ref SplunkAPIKey
        - ParameterKey: SplunkLogIngestUrl
          ParameterValue: !Ref SplunkLogIngestUrl
        - ParameterKey: SplunkMetricIngestUrl
          ParameterValue: !Ref SplunkMetricIngestUrl
        - ParameterKey: RoleArn
          ParameterValue: !GetAtt SplunkAwsLogsCollectorRole.Arn
      TemplateBody: |
          AWSTemplateFormatVersion: '2010-09-09'
          Description: Regional resources required by Splunk AWS Logs Collector
          Parameters:
            SplunkAPIKey:
              Type: String
            SplunkLogIngestUrl:
              Type: String
            SplunkMetricIngestUrl:
              Type: String
            RoleArn:
              Type: String
          Resources:
            SplunkAwsLogsCollector:
              Type: AWS::Lambda::Function
              Description: Splunk AWS Log Collector
              Properties:
                FunctionName: 'splunk-aws-logs-collector'
                Runtime: python3.7
                Timeout: 60
                Code: 
                  S3Bucket: !Sub 'o11y-public-${AWS::Region}'
                  S3Key: 'aws-log-collector/lambda_archive_name'
                Handler: function.lambda_handler
                Environment:
                  Variables:
                    SPLUNK_API_KEY: !Ref SplunkAPIKey
                    SPLUNK_LOG_URL: !Ref SplunkLogIngestUrl
                    SPLUNK_METRIC_URL: !Ref SplunkMetricIngestUrl
                Role: !Ref RoleArn
                Tags:
                  - Key: splunk-log-collector-id
                    Value: !Sub '${AWS::Region}'

            SplunkAwsLogsCollectorPermission:
              Type: AWS::Lambda::Permission
              Properties:
                FunctionName: !Ref SplunkAwsLogsCollector
                Action: 'lambda:InvokeFunction'
                Principal: !Sub 'logs.${AWS::Region}.amazonaws.com'
                SourceAccount: !Ref 'AWS::AccountId'
                SourceArn: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*'

            AllS3BucketsEventsCanInvokeLogCollector:
              Type: AWS::Lambda::Permission
              Properties:
                Action: 'lambda:InvokeFunction'
                FunctionName: !Ref SplunkAwsLogsCollector
                Principal: s3.amazonaws.com
                SourceAccount: !Ref 'AWS::AccountId'
                SourceArn: !Sub 'arn:aws:s3:::*'

  SplunkMetricStreamsRegionalResources:
    Type: AWS::CloudFormation::StackSet
    Properties:
      StackSetName: SplunkMetricStreamsRegionalResources
      Description: Create regional resources for Splunk integration with CloudWatch Metric Streams
      Capabilities:
        - CAPABILITY_NAMED_IAM
      PermissionModel: SELF_MANAGED
      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - !Ref "AWS::AccountId"
          Regions: !Ref EnabledRegions
      Parameters:
        - ParameterKey: SplunkAPIKey
          ParameterValue: !Ref SplunkAPIKey
        - ParameterKey: SplunkCloudIngestUrl
          ParameterValue: !Ref SplunkCloudIngestUrl
        - ParameterKey: S3BucketArn
          ParameterValue: !GetAtt SplunkMetricStreamsS3.Arn
        - ParameterKey: S3RoleArn
          ParameterValue: !GetAtt SplunkMetricStreamsS3Role.Arn
      TemplateBody: |
          AWSTemplateFormatVersion: '2010-09-09'
          Description: Regional resources required by Splunk integration with CloudWatch Metric Streams
          Parameters:
            SplunkAPIKey:
              Type: String
            SplunkCloudIngestUrl:
              Type: String
            S3RoleArn:
              Type: String
            S3BucketArn:
              Type: String
          Resources:
            SplunkMetricStreamsKinesisFirehose:
              Type: AWS::KinesisFirehose::DeliveryStream
              Properties:
                DeliveryStreamType: DirectPut
                DeliveryStreamName: !Sub 'splunk-metric-streams-${AWS::Region}'
                HttpEndpointDestinationConfiguration:
                  BufferingHints:
                    IntervalInSeconds: 60
                    SizeInMBs: 1
                  EndpointConfiguration:
                    AccessKey: !Ref SplunkAPIKey
                    Url: !Ref SplunkCloudIngestUrl
                  RequestConfiguration:
                    ContentEncoding: NONE
                  S3BackupMode: FailedDataOnly
                  S3Configuration:
                    BucketARN: !Ref S3BucketArn
                    CompressionFormat: GZIP
                    RoleARN: !Ref S3RoleArn
                Tags:
                  - Key: splunk-metric-streams
                    Value: !Sub '${AWS::Region}'

            SplunkMetricStreamRole:
              Type: AWS::IAM::Role
              Properties:
                RoleName: !Sub 'splunk-metric-streams-${AWS::Region}'
                AssumeRolePolicyDocument:
                  Version: 2012-10-17
                  Statement:
                    - Effect: Allow
                      Principal:
                        Service:
                          - streams.metrics.cloudwatch.amazonaws.com
                      Action:
                        - 'sts:AssumeRole'
                Path: /
                Policies:
                  - PolicyName: root
                    PolicyDocument:
                      Version: 2012-10-17
                      Statement:
                        - Effect: Allow
                          Action:
                            - 'firehose:PutRecord'
                            - 'firehose:PutRecordBatch'
                          Resource: !GetAtt SplunkMetricStreamsKinesisFirehose.Arn
                Description: 'A role that allows CloudWatch MetricStreams to publish to Kinesis Firehose'
                Tags:
                  - Key: splunk-metric-streams
                    Value: !Sub '${AWS::Region}'
